plugins {
    id 'java'   
    id "org.sonarqube" version "3.1.1"
    id "pmd"
    id 'checkstyle'
    id 'jacoco'
    id "com.github.spotbugs" version "4.7.0"
}


//group & version
group 'org.example'
version '1.0-SNAPSHOT'


//repositories, [mavenCentral,Jcenter]
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0' 
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0' 
    testCompileOnly 'junit:junit:4.12' 
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'
}

sonarqube {
    properties {
        property "sonar.projectName", "teamvv_testing"
        property "sonar.projectKey", "teamvv_testing"
        property "sonar.sources","src/main/java"
        property "sonar.language","java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "http://117.16.143.60:9000"
        property "sonar.login", "6af4b270c07ef694980c0fb6a5fba483e4530ca9"
    }
}


test {
    useJUnitPlatform()
}


// PMD setting
pmd {
    ignoreFailures = true
    reportsDir = file("${buildDir}/reports/PMD")
    toolVersion = "6.6.0"
}
// PMDMain
pmdMain {
    reports{
        xml.enabled true
        html.enabled true
        xml.destination = file("${pmd.reportsDir}/pmd.xml")
        html.destination = file("${pmd.reportsDir}/pmd.html")
    }
}
<<<<<<< HEAD


=======
pmdTest {
    reports{
        xml.enabled true
        html.enabled true
        xml.destination = file("${pmd.reportsDir}/pmd_test.xml")
        html.destination = file("${pmd.reportsDir}/pmd_test.html")
    }
}
>>>>>>> da1ba062b7879635d1583e3945f62b655fe0d0c5
// Checkstyle setting
checkstyle {
    ignoreFailures = true
    configFile = file('config/checkstyle/checkstyle.xml')
    reportsDir = file("${buildDir}/reports/checkStyle")
    toolVersion = "8.41"
}
// CheckstyleMain
checkstyleMain {
    reports {
        xml.enabled true
        html.enabled true
        xml.destination = file("${checkstyle.reportsDir}/checkStyle.xml")
        html.destination = file("${checkstyle.reportsDir}/checkStyle.html")
    }
}


// jacoco setting
jacoco {
    toolVersion = '0.8.5'
    reportsDir = file("${buildDir}/reports/Jacoco")
}
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        xml.destination file("${jacoco.reportsDir}/jacoco.xml")
        html.destination file("${jacoco.reportsDir}/jacoco.html")
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }
        }
    }
}
test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
    }
}


// spotbugs setting
spotbugs {
    ignoreFailures = true
    reportsDir = file("${buildDir}/reports/spotbug")
}

spotbugsMain {
    ignoreFailures = true
    reports {
        xml.enabled = false
        html.enabled = true
        xml.destination file("${spotbugs.reportsDir}/spotbug.xml")
        html.destination file("${spotbugs.reportsDir}/spotbug.html")
    }
}
spotbugsTest {
    ignoreFailures = true
    reports {
        xml.enabled = false
        html.enabled = true
        xml.destination file("${spotbugs.reportsDir}/spotbug_test.xml")
        html.destination file("${spotbugs.reportsDir}/spotbug_test.html")
    }
}








